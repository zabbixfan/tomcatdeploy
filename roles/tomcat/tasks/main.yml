---
- shell: date +%T
  register: res
- debug: msg={{res.stdout}}

- name: Install Java 1.8
  yum: name={{item}} state=present
  with_items:
    - java-1.8.0-openjdk
    - java-1.8.0-openjdk-devel

- name: add group "tomcat"
  group: name=tomcat

- name: add user "tomcat"
  user: name=tomcat group=tomcat home=/home/tomcat createhome=yes
  become: True
  become_method: sudo
  ignore_errors: yes

- name: mkdir project directory
  file: path={{ tomcat_path }} state=directory

- name: Download Tomcat
  #get_url: url=http://mirrors.aliyun.com/apache/tomcat/tomcat-8/v8.0.37/bin/apache-tomcat-8.0.37.tar.gz dest=/tmp/apache-tomcat-8.0.37.tar.gz
  get_url: url=http://192.168.255.65/down/apache-tomcat-8.0.37.tar.gz dest=/tmp/apache-tomcat-8.0.37.tar.gz

- name: Extract archive
  command: chdir=/usr/share /bin/tar xvf /tmp/apache-tomcat-8.0.37.tar.gz -C {{ tomcat_path }} creates={{ tomcat_path }}/apache-tomcat-8.0.37

- name: Install Tomcat init script
  template: src=tomcat-initscript.sh dest=/etc/init.d/tomcat-{{ project_name }} mode=0755  

- name: Add auto restart
  #service: name=tomcat-{{ project_name }} enabled=yes
  shell: chkconfig --add tomcat-{{ project_name }} removes=/etc/init.d/tomcat-{{ project_name }}

- name: Copy jmxaccess
  copy: src=jmxaccess dest={{ tomcat_path }}/apache-tomcat-8.0.37/conf/

- name: Copy jmxpassword
  copy: src=jmxpassword dest={{ tomcat_path }}/apache-tomcat-8.0.37/conf/

- name: Copy setenv.sh
  template: src=setenv.sh dest={{ tomcat_path }}/apache-tomcat-8.0.37/bin/
  when: temp_force

- name: Copy jmx-remote.jar
  get_url: url=http://192.168.255.65/down/catalina-jmx-remote.jar dest={{tomcat_path}}/apache-tomcat-8.0.37/lib/

- name: Copy jmx-client
  copy: src=cmdline-jmxclient-0.10.3.jar dest=/lib/

- name: Configure Tomcat server
  template: src=server.xml dest={{ tomcat_path }}/apache-tomcat-8.0.37/conf/ mode=0644

- name: copy package file to project temp directory
#  get_url: url={{ package_url }} dest={{ tomcat_path }}/apache-tomcat-8.0.37/temp/ timeout=30
  shell: wget -q -c -O {{ tomcat_path }}/apache-tomcat-8.0.37/temp/{{file_name}} "{{ package_url }}"
  register: res
  until: res.rc == 0
  retries: 2
  delay: 1
  tags: aa

- name: mkdir backup directory
  file: path=/backup/{{ project_name }}/{{ backup_datetime }} state=directory
  when: env_code == 'V5'
- name: backup webapp to backup directory
  shell: mv {{ tomcat_path }}/apache-tomcat-8.0.37/webapps/*.war /backup/{{ project_name }}/{{ backup_datetime }}/  removes={{ tomcat_path }}/apache-tomcat-8.0.37/webapps/*.war
  when: env_code == 'V5'
- name: Make latest backup directory
  file: src=/backup/{{ project_name }}/{{ backup_datetime }} path=/backup/{{ project_name }}/latest state=link
  when: env_code == 'V5'  
#- debug: msg={{res}}
#  tags: aa

- name: Change ownership of Tomcat installation
  file: path={{ tomcat_path }} owner=tomcat group=tomcat state=directory recurse=yes

- name: stop tomcat by raw script
  command: /etc/init.d/tomcat-{{ project_name }} stop
  
- name: copy package file to project webapps directory
  #get_url: url={{ package_url }} dest={{ tomcat_path }}/apache-tomcat-8.0.37/webapps/ timeout=30
  command: mv -f temp/{{ file_name }} webapps/ chdir={{tomcat_path}}/apache-tomcat-8.0.37 removes={{ tomcat_path }}/apache-tomcat-8.0.37/temp/{{ file_name }}

- name: start Tomcat by raw script
  command: /etc/init.d/tomcat-{{ project_name }} start
#  environment:
#    ENV_CODE: "{{ env_code }}"
- name: wait for tomcat to start
  wait_for: port={{http_port}}

- shell: date +%T
  register: res
- debug: msg={{res.stdout}}
